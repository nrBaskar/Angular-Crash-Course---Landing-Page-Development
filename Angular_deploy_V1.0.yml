---
- name: Staging server Deployment
  hosts: stageserver
  become_user: root
  become: true
  vars:
    repo_path: nrbaskar/angularcourse:{{DOCKER_TAG}}
    dest_path: /home/ec2-user/{{DOCKER_TAG}}
  tasks:
    - name: Ensure required variables are defined
      assert:
        that:
          - DOCKER_TAG is defined
      tags:
        - always

    - name: Install python pip
      yum:
        name: python-pip
        state: present

    - name: Install docker
      yum:
        name: docker
        state: present

    - name: start docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install docker-py python module
      pip:
        name: docker-py
        state: present

    - name: Pull docker image
      docker_image:
        name: "{{ repo_path }}"
        source: pull
        state: present

    - name: create directory
      file:
        state: directory
        dest: "{{ dest_path }}"

    - name: copy website to the host
      copy:
        src: ./
        dest: "{{ dest_path }}"

    - name: Install Nodejs & AngularJS
      shell: 'curl --silent --location https://rpm.nodesource.com/setup_16.x | bash -'

    - name: Install required packages
      yum:
        name: nodejs
        state: present

    - name: Install Angular CLI
      npm:
        name: "@angular/cli"
        global: yes
        state: present

    - name: Install npm dependencies
      command: npm install
      args:
        chdir: "{{ dest_path }}"

    - name: Build the application
      command: ng build --prod
      args:
        chdir: "{{ dest_path }}"

    - name: Start the Docker container
      docker_container:
        name: "{{DOCKER_TAG}}-container"
        image: "{{ repo_path }}"
        ports:
          - "80:80"
        volumes:
          - "{{ dest_path }}:/usr/share/nginx/html"
        state: started
        restart_policy: always

    - name: Wait for the container to start
      wait_for:
        host: localhost
        port: 80
        delay: 5
        timeout: 60

    - name: Install PM2
      npm:
        name: pm2
        global: yes
        state: present

    - name: Start the application with PM2
      command: pm2 start --name "{{ DOCKER_TAG }}-Service" npm -- start
      args:
        chdir: "{{ dest_path }}"
      environment:
        NODE_ENV: production
        PORT: "80"
